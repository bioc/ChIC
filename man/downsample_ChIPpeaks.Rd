% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/peakDownSampling.R
\name{downsample_ChIPpeaks}
\alias{downsample_ChIPpeaks}
\title{Function for downsampling peaks in ChIP-data 
to simulate failed antibody}
\usage{
downsample_ChIPpeaks(
  chip.data,
  input.data,
  read_length,
  annotationID = "hg19",
  mc = 1,
  debug = FALSE
)
}
\arguments{
\item{chip.data}{data-structure with tag information reads from bam file 
(see readBamFile())}

\item{input.data}{data-structure with tag information reads from bam file 
(see readBamFile())}

\item{read_length}{Integer, length of the reads}

\item{annotationID}{String, indicating the genome assembly (Default="hg19")}

\item{mc}{Integer, the number of CPUs for parallelization (default=1)}

\item{debug}{Boolean, to enter debugging mode. Intermediate files are 
saved in working directory}
}
\value{
chip.dataDownSampeld, data-structure with downsampled tags
}
\description{
Function to downsample bam files: reads ChIP and Input 
bam files, calles peaks and removes randomly 60percent 
of the reads from the peaks. Returns a downsampled ChIP dataframe.

downsample_ChIPpeaks
}
\examples{

## This command is time intensive to run

## To run this example code the user MUST provide 2 bam files: one for ChIP 
## and one for the input". Here we used ChIP-seq data from ENCODE. Two 
## example files can be downloaded using the following link:
## https://www.encodeproject.org/files/ENCFF000BFX/
## https://www.encodeproject.org/files/ENCFF000BDQ/
## and save them in the working directory (here given in the temporary 
## directory "filepath"

mc=4
\dontrun{

filepath=tempdir()
setwd(filepath)

data("chipSubset", package = "ChIC.data", envir = environment())
chipBam=chipSubset
data("inputSubset", package = "ChIC.data", envir = environment())
inputBam=inputSubset
chip.dataNew=downsample_ChIPpeaks(chip.data=chipBam, 
   input.data=inputBa, read_length=read_length,
   annotationID="hg19", mc=mc, debug=FALSE)

message(" downsampling from", sum(unlist(lapply(chipBam$tags,length)))," to ",
sum(unlist(lapply(chip.dataNew$tags,length))))
}
}
